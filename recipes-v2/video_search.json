{
  "name": "video_search",
  "title": "Kaltura Media Library Search",
  "summary": "Learn how to search through your video library using Kaltura's API",
  "relatedRecipes": [
    "captions",
    "metadata"
  ],
  "icon": "search",
  "steps": [
    {
      "title": "Simple freeText search",
      "description": [
        "To retrieve a list of media entries, use Media Entry Filters to select which content you want to show.\nThis combination of filter parameters will search through all of the Kaltura Media Entry fields and custom metadata fields, using a free text search and ordered by default using the BM25 algorithm."
      ],
      "apiCall": {
        "path": "/service/media/action/list",
        "method": "get"
      },
      "parameters": [
        {
          "name": "filter[freeText]",
          "default": ""
        },
        {
          "name": "filter[createdAtGreaterThanOrEqual]"
        },
        {
          "name": "filter[advancedSearch][objectType]",
          "default": "KalturaMetadataSearchItem",
          "hidden": false,
          "x-consoleDefault": "KalturaMetadataSearchItem"
        },
        {
          "name": "filter[orderBy]",
          "x-consoleDefault": "-weight",
          "hidden": false
        }
      ]
    },
    {
      "title": "Video Player",
      "description": [
        "Here's how to embed the results in HTML. You can select a skin by setting uiconf_id."
      ],
      "codeSnippet": {
        "html": "<div class=\"row\" style=\"margin-bottom: 10px\">\n  <div class=\"col-xs-12 col-md-5\">\n    <h2><%- results[0].objects[0].name %></h2>\n    <p><%- results[0].objects[0].description %></p>\n  </div>\n  <div class=\"col-xs-12 col-md-6 col-md-offset-1\">\n    <script src=\"https://cdnapisec.kaltura.com/p/<%-  results[0].objects[0].partnerId  %>/sp/<%-  results[0].objects[0].partnerId  %>00/embedIframeJs/uiconf_id/<%-  answers.uiConf  %>/partner_id/<%-  results[0].objects[0].partnerId  %>\">\n    </script>\n    <div id=\"kaltura_player_<%-  results[0].objects[0].id  %>\" style=\"width: 560px; height: 395px;\">\n    </div>\n    <script>\n    kWidget.embed({\n      \"targetId\": \"kaltura_player_<%-  results[0].objects[0].id  %>\",\n      \"wid\": \"_<%-  results[0].objects[0].partnerId  %>\",\n      \"uiconf_id\": <%-  answers.uiConf  %>,\n      \"flashvars\": {},\n      \"cache_st\": 1437326770,\n      \"ks\": window.ks,\n      \"entry_id\": \"<%-  results[0].objects[0].id  %>\"\n    });\n    </script>\n  </div>\n</div>\n"
      },
      "parameters": [
        {
          "name": "uiConf",
          "dynamicEnum": {
            "path": "/service/uiconf/action/list",
            "method": "get",
            "array": "objects",
            "value": "id",
            "label": "name",
            "parameters": [
              {
                "name": "filter[objTypeEqual]",
                "value": 1
              }
            ]
          }
        },
        {
          "name": "filter[freeText]",
          "default": "",
          "hidden": true,
          "dynamicValue": {
            "fromStep": 0,
            "answer": "filter[freeText]"
          }
        },
        {
          "name": "filter[createdAtGreaterThanOrEqual]",
          "hidden": true,
          "dynamicValue": {
            "fromStep": 0,
            "answer": "filter[createdAtGreaterThanOrEqual]"
          }
        },
        {
          "name": "filter[advancedSearch][objectType]",
          "default": "KalturaMetadataSearchItem",
          "hidden": true,
          "dynamicValue": {
            "fromStep": 0,
            "answer": "filter[advancedSearch][objectType]"
          }
        },
        {
          "name": "filter[advancedSearch][orderBy]",
          "default": "-createdAt",
          "enum": [
            "+createdAt",
            "+duration",
            "+lastPlayedAt",
            "+name",
            "+plays",
            "+recent",
            "+startDate",
            "+updatedAt",
            "+views",
            "-createdAt",
            "-duration",
            "-lastPlayedAt",
            "-name",
            "-plays",
            "-recent",
            "-startDate",
            "-updatedAt",
            "-views"
          ],
          "enumLabels": [
            "CREATED_AT_ASC",
            "DURATION_ASC",
            "LAST_PLAYED_AT_ASC",
            "NAME_ASC",
            "PLAYS_ASC",
            "RECENT_ASC",
            "START_DATE_ASC",
            "UPDATED_AT_ASC",
            "VIEWS_ASC",
            "CREATED_AT_DESC",
            "DURATION_DESC",
            "LAST_PLAYED_AT_DESC",
            "NAME_DESC",
            "PLAYS_DESC",
            "RECENT_DESC",
            "START_DATE_DESC",
            "UPDATED_AT_DESC",
            "VIEWS_DESC"
          ],
          "hidden": true,
          "dynamicValue": {
            "fromStep": 0,
            "answer": "filter[advancedSearch][orderBy]"
          }
        }
      ],
      "apiCall": {
        "path": "/service/media/action/list",
        "method": "get"
      }
    }
  ],
  "keywords": [
    "search",
    "library search",
    "kaltura video search",
    "media list"
  ],
  "tags": [
    "media",
    "search",
    "list"
  ],
  "description": "To search for objects in Kaltura, API services expose the list action. For media entries, the list action provides a vast set of filter parameters to allow for granular flexibility in building custom library search experiences, whether it is a free-form search, or a pre-determined gallery.   \nThis recipe will walk through some common scenarios of using the media.list action.  \n \nSearch Operators in the media.list API:\n\n* The following special operators can be used in a free text search field in the Kaltura API:\n* Exclamation mark (!) - AND NOT . Note that AND NOT is not a unary NOT operator. A positive search word must appear before the AND phrase. See here for additional information.\n* Double Quotes (\"\") - are treated as an EXACT MATCH search operand.\n* Backslash (\\) - escape. To search for the character ! you have to enter \\! in the search field.\n* Comma (,) - OR\n* Spacebar - AND\n\nBlend Chars in the media.list API:\n\nBlended characters are indexed both as separators and valid characters. For instance, assume that & is configured as blended and AT&T occurs in an indexed document. Three different keywords will get indexed, namely \"at&t\", treating blended characters as valid, plus \"at\" and \"t\", treating them as separators.   \nThe following blend chars are configured for the API search:   \n!, $, ', (, ), *, -, /, :, ;, <, =, #, [, \\, ], ^, `, {, |, }, ~, %, &, +, >, ?, @, _   \nThese blend characters may be used as delimiters or as characters.   \n\nWe also recommend reading [Kaltura Search Engine for Media, Metadata and Timeline: Search Behavior and Commands](https://knowledge.kaltura.com/node/247) for more details on the search behavior in the KMC and MediaSpace.",
  "sortOrder": 2,
  "finishText": "Now"
}