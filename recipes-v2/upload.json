{
  "name": "upload",
  "title": "Upload a Video",
  "summary": "Learn how to upload a video to your video library",
  "description": "This recipe will walk you through the process of uploading new videos using the Kaltura API. Video files can be located on disk, or be specified as an HTML file input",
  "icon": "upload",
  "steps": [
    {
      "title": "Uploading a Video",
      "description": [
        "Use an ```<input type=\"file\">``` tag to upload a video file. Javascript clients should use the [jQuery fileupload plugin](https://github.com/kaltura/jQuery-File-Upload)",
        "Select which type of media you'd like to upload, then use the page below to upload a video, image, or audio file. If you don't have a video file handy, you can [download a sample](/this-is-my-jam.mp4)",
        "You can read more about media uploads [here](http://knowledge.kaltura.com/faq/create-new-kaltura-entry-and-upload-video-file-using-kaltura-api)"
      ],
      "parameters": [
        {
          "name": "mediaType",
          "label": "Media Type",
          "default": 1,
          "enum": [
            {
              "label": "Video",
              "value": 1
            },
            {
              "label": "Image",
              "value": 2
            },
            {
              "label": "Audio",
              "value": 5
            }
          ]
        }
      ],
      "codeSnippet": {
        "node": "<h1>Upload Video</h1>\n<label>Video to Upload</label>\n<form id=\"UploadForm\">\n  <input type=\"file\" name=\"fileData\">\n  <input type=\"submit\" value=\"Upload\">\n</form>\n<div id=\"UploadDone\"></div>\n\n<script>\n  $('#UploadForm').submit(function() {\n    var data = new FormData(document.getElementById('UploadForm'));\n    $.ajax({\n      url: '/UploadFile',\n      type: 'POST',\n      data: data,\n      mimeType: \"multipart/form-data\",\n      contentType: false,\n      cache: false,\n      processData: false,\n      success: function (data, textStatus, jqXHR) {\n        $('#UploadDone').html(data);\n      }\n    });\n    return false;\n  })\n</script>\n",
        "ruby": "<h1>Upload Video</h1>\n<label>Video to Upload</label>\n<form id=\"UploadForm\">\n  <input type=\"file\" name=\"fileData\">\n  <input type=\"submit\" value=\"Upload\">\n</form>\n<div id=\"UploadDone\"></div>\n\n<script>\n  $('#UploadForm').submit(function() {\n    var data = new FormData(document.getElementById('UploadForm'));\n    $.ajax({\n      url: '/UploadFile',\n      type: 'POST',\n      data: data,\n      mimeType: \"multipart/form-data\",\n      contentType: false,\n      cache: false,\n      processData: false,\n      success: function (data, textStatus, jqXHR) {\n        $('#UploadDone').html(data);\n      }\n    });\n    return false;\n  })\n</script>\n",
        "php": "<h1>Upload Video</h1>\n<label>Video to Upload</label>\n<form id=\"UploadForm\">\n  <input type=\"file\" name=\"fileData\">\n  <input type=\"submit\" value=\"Upload\">\n</form>\n<div id=\"UploadDone\"></div>\n\n<script>\n  $('#UploadForm').submit(function() {\n    var data = new FormData(document.getElementById('UploadForm'));\n    $.ajax({\n      url: '/UploadFile.php',\n      type: 'POST',\n      data: data,\n      mimeType: \"multipart/form-data\",\n      contentType: false,\n      cache: false,\n      processData: false,\n      success: function (data, textStatus, jqXHR) {\n        $('#UploadDone').html(data);\n      }\n    });\n    return false;\n  })\n</script>\n",
        "javascript": "<script type=\"text/javascript\">\n  var setupUpload = function() {\n    if (!client.ks) return setTimeout(setupUpload, 100);\n    file = $('input[name=\"fileData\"]').fileupload({\n      apiURL:'<%- Lucy.answer(\"serviceURL\") %>api_v3/',\n      url: '<%- Lucy.answer(\"serviceURL\") %>api_v3/?service=uploadToken&action=upload&format=1',\n      ks: client.ks,\n      singleFileUploads: true,\n      dataType: 'json',\n      autoUpload: true,\n      submit: function(e, data) {\n        $('#UploadStatusBar').show();\n      },\n      done: function(e, data) {\n        $('#UploadDone').html(UploadDoneView({result: data.result}));\n      },\n    });\n  };\n  $(document).ready(setupUpload);\n</script>\n\n<h1>Upload Video</h1>\n<hr>\n<label>Video to Upload</label>\n<input type=\"file\" name=\"fileData\">\n<div id=\"UploadStatusBar\" class=\"alert alert-info\" style=\"display: none\">\n  <i class=\"fa fa-spin fa-refresh\"></i>&nbsp;&nbsp;\n  <span id=\"UploadStatus\">\n    Uploading\n  </span>\n</div>\n<div id=\"UploadSuccess\" class=\"alert alert-success\" style=\"display: none\">\n  Entry was converted successfully and is ready for playback\n</div>\n<div id=\"UploadDone\"></div>\n"
      }
    },
    {
      "title": "Creating a Media Entry",
      "description": "Once the file has been uploaded, use the baseEntry service to create a Media Entry from it.\n\nIt may take some time to convert your video, so you can use ```media.get``` to poll for its status.",
      "parameters": [],
      "codeSnippet": {
        "ruby": "entry = Kaltura::KalturaMediaEntry.new\nentry.name = <%- Lucy.code.variable('answers.name') %>\nentry.media_type = <%- Lucy.code.variable('answers.mediaType') %>\ntoken = <%- Lucy.code.variable('answers.upload_token_id') %>\nentry = @@client.media_service.add_from_uploaded_file(entry, token)\n\nwhile entry.status != \"2\" do\n  sleep 1\n  entry = @@client.media_service.get(entry.id)\nend\n<%- Lucy.returnCode('entry') %>\n",
        "php": "$entry = new KalturaMediaEntry();\n$entry->name = <%- Lucy.code.variable('answers.name') %>;\n$entry->mediaType = <%- Lucy.code.variable('answers.mediaType') %>;\n$entry = $client->media->add($entry);\n$mediaResource = new KalturaUploadedFileTokenResource();\n$mediaResource->token = <%- Lucy.code.variable('answers.uploadTokenId') %>;\n\n$result = $client->media->addContent($entry->id, $mediaResource);\nwhile ($result->status != 2) {\n  sleep(1);\n  $result = $client->media->get($result->id);\n}\n<%- Lucy.returnCode('$result') %>\n",
        "javascript": "entry = new KalturaMediaEntry();\nentry.name = <%- Lucy.code.variable('answers.name') %>;\nentry.mediaType = <%- Lucy.code.variable('answers.mediaType') %>;\nclient.media.add(function(success, entry) {\n  if (!success || (entry.code && entry.message)) {\n    return console.log('Kaltura Error', success, entry);\n  }\n  var mediaResource = new KalturaUploadedFileTokenResource();\n  mediaResource.token = <%- Lucy.code.variable('answers.uploadTokenId') %>;\n  var checkStatus = function(success, results) {\n    if (!success || (results.code && results.message)) {\n      console.log('Kaltura Error', success, results);\n    } else if (results.status !== 2) {\n      var statusMessage = results.status === 1 ?\n          'converting' : 'status ' + results.status;\n      $('#UploadStatus').text(\n          'Entry not ready yet (' + statusMessage + ')');\n      setTimeout(function() {\n        client.media.get(checkStatus, results.id);\n      }, 1000);\n    } else {\n      $('#UploadStatusBar').hide();\n      $('#UploadSuccess').show();\n      <%- Lucy.returnCode('results') %>\n    }\n  }\n  client.media.addContent(checkStatus, entry.id, mediaResource);\n}, entry);\n\n"
      }
    }
  ]
}